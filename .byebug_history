exit
params
exit
eixt
PostComment.all
PostComments.all
nn.create
nn
nn = @post.comments.children_of(pid)
@post.comments.children_of(pid)
@post.comments
newNode = @post
parent = PostComment.find(pid)
parent = PostComment.fid(pid)
PostComment.find(pid)
pid = post_comment_params[:parent_id]
pid = post_comment_params[:parend_id]
pid = post_comment_params
parent_id
PostComment
PostComment.find(parend_id)
post_comment_params
exit
params
exit
params
exit
params
exit
eixt c
params
exit
@comment.ancestry
2comment.ancestry
comment.ancestry
@comment
@comments.ansectry
params
exit
eixt
params
exit
params
exit
params
parms
exit
params
exit
c
c = PostComment.find_by(content: "hi there")
@comment.parent
@comment
@post
exit
post_comment_params
post_comment_param
exit
post_comment_params
post_comments_params
params
exit
@comment
exit
@comment.parent
@comment
exit
@comment.child
@comment.children
@comment.parent
@comment.ancestry
@post.comments
params.require(:post_comment)
params
@comment
@post
post_comment_params
@comment
exit
comment
bin
ex
bi
hi
exit
comment.save
comment
@post.comments
exit
@post.comments
exit
@post.comments
@post.comments.empty?
exit
comment
exit
step
comment
step
comment
exit
comment.parent
comment.children
comment.content
comment
exit
@post.comments
@post
@pos
@post.comment
@post.comments
@post
comment
exit
comment.children.new
bd.children
bd.parent
bd
bd = comment.parent
comment.parent
comment.parrent
comment.children
comment
exit
params.require(:post_comment).permit(:content)
params.require(:post_comment)
params.require(:content)
params
params.require(:comment).permit(:content)
params
post_comment_params
resource_post
exit
@post.comments
@post.comments.build(content:'new comment')
post.comments.build(content:'new comment')
@post.comments
@post
